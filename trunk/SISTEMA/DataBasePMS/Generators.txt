/* CRIAÇÃO DE SEQUENCIAIS PARA O AUTO INCREMENTO */

CREATE SEQUENCE GEN_TB_PAISES;
CREATE SEQUENCE GEN_TB_ESTADOS;
CREATE SEQUENCE GEN_TB_CIDADES;
CREATE SEQUENCE GEN_TB_TIPOPESSOA;
CREATE SEQUENCE GEN_TB_PESSOA;
CREATE SEQUENCE GEN_TB_USUARIO;
CREATE SEQUENCE GEN_TB_STATUS;
CREATE SEQUENCE GEN_TB_FUNCIONARIOS;
CREATE SEQUENCE GEN_TB_PROJETOS;
CREATE SEQUENCE GEN_TB_PESSOA_PROJETO;
CREATE SEQUENCE GEN_TB_MARCOS;
CREATE SEQUENCE GEN_TB_PROJETO_MARCOS;
CREATE SEQUENCE GEN_TB_SERVICOS;
CREATE SEQUENCE GEN_TB_PROJETOS_SERVICOS;
CREATE SEQUENCE GEN_TB_UNIDADE_MEDIDA;
CREATE SEQUENCE GEN_TB_MATERIAIS;
CREATE SEQUENCE GEN_TB_RECURSOS;
CREATE SEQUENCE GEN_TB_PROJETOS_MATERIAIS;
CREATE SEQUENCE GEN_TB_RECURSOS_SERVICOS;
CREATE SEQUENCE GEN_TB_FUNCIONARIOS_RECURSOS;
CREATE SEQUENCE GEN_TB_PROJETOS_RECURSOS;
CREATE SEQUENCE GEN_TB_TURNOS;
CREATE SEQUENCE GEN_TB_DIA_SEMANA;
CREATE SEQUENCE GEN_TB_FUNC_TURNO_SEMANA;
CREATE SEQUENCE GEN_TB_DIA_NAO_UTIL;
CREATE SEQUENCE GEN_TB_ORDEM_SERVICO;
CREATE SEQUENCE GEN_TB_OS_SERVICO;
CREATE SEQUENCE GEN_TB_APTO_MATERIAIS;
CREATE SEQUENCE GEN_TB_APONTAMENTOS_RECURSOS;
CREATE SEQUENCE GEN_TB_MARCOS_SERVICOS;
CREATE SEQUENCE GEN_TB_PROJETO_FUNCIONARIOS ;
CREATE SEQUENCE GEN_TB_APTO_FUNCIONARIOS;
CREATE SEQUENCE GEN_TB_OS_MATERIAIS;
CREATE SEQUENCE GEN_TB_OS_RECURSOS;
CREATE SEQUENCE GEN_TB_OS_FUNCIONARIOS;
CREATE SEQUENCE GEN_TB_PARAMETROS;


/*TB_PAISES*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PAISES FOR TB_PAISES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PAISES,1);
END
^

SET TERM ; ^


/*TB_ESTADOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_ESTADOS FOR TB_ESTADOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_ESTADOS,1);
END
^

SET TERM ; ^

/*TB_CIDADES*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_CIDADES FOR TB_CIDADES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_CIDADES,1);
END
^

SET TERM ; ^

/*TB_TIPOPESSOA*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_TIPOPESSOA FOR TB_TIPOPESSOA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_TIPOPESSOA,1);
END
^

SET TERM ; ^


/*TB_PESSOA*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PESSOA FOR TB_PESSOA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PESSOA,1);
END
^

SET TERM ; ^


/*TB_USUARIO*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_USUARIO FOR TB_USUARIO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_USUARIO,1);
END
^

SET TERM ; ^


/*TB_STATUS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_STATUS FOR TB_STATUS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_STATUS,1);
END
^

SET TERM ; ^


/*TB_FUNCIONARIOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_FUNCIONARIOS FOR TB_FUNCIONARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_FUNCIONARIOS,1);
END
^

SET TERM ; ^


/*TB_PROJETOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETOS FOR TB_PROJETOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETOS,1);
END
^

SET TERM ; ^


/*TB_PESSOA_PROJETO*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PESSOA_PROJETO FOR TB_PESSOA_PROJETO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PESSOA_PROJETO,1);
END
^

SET TERM ; ^



/*TB_MARCOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_MARCOS FOR TB_MARCOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_MARCOS,1);
END
^

SET TERM ; ^



/*TB_PROJETO_MARCOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETO_MARCOS FOR TB_PROJETO_MARCOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETO_MARCOS,1);
END
^

SET TERM ; ^



/*TB_SERVICOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_SERVICOS FOR TB_SERVICOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_SERVICOS,1);
END
^

SET TERM ; ^



/*TB_PROJETOS_SERVICOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETOS_SERVICOS FOR TB_PROJETOS_SERVICOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETOS_SERVICOS,1);
END
^

SET TERM ; ^



/*TB_UNIDADE_MEDIDA*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_UNIDADE_MEDIDA FOR TB_UNIDADE_MEDIDA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_UNIDADE_MEDIDA,1);
END
^

SET TERM ; ^



/*TB_MATERIAIS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_MATERIAIS FOR TB_MATERIAIS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_MATERIAIS,1);
END
^

SET TERM ; ^



/*TB_RECURSOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_RECURSOS FOR TB_RECURSOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_RECURSOS,1);
END
^

SET TERM ; ^



/*TB_PROJETOS_MATERIAIS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETOS_MATERIAIS FOR TB_PROJETOS_MATERIAIS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETOS_MATERIAIS,1);
END
^

SET TERM ; ^



/*TB_RECURSOS_SERVICOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_RECURSOS_SERVICOS FOR TB_RECURSOS_SERVICOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_RECURSOS_SERVICOS,1);
END
^

SET TERM ; ^



/*TB_FUNCIONARIOS_RECURSOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_FUNCIONARIOS_RECURSOS FOR TB_FUNCIONARIOS_RECURSOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_FUNCIONARIOS_RECURSOS,1);
END
^

SET TERM ; ^



/*TB_PROJETOS_RECURSOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETOS_RECURSOS FOR TB_PROJETOS_RECURSOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETOS_RECURSOS,1);
END
^

SET TERM ; ^



/*TB_TURNOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_TURNOS FOR TB_TURNOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_TURNOS,1);
END
^

SET TERM ; ^



/*TB_DIA_SEMANA*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_DIA_SEMANA FOR TB_DIA_SEMANA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_DIA_SEMANA,1);
END
^

SET TERM ; ^



/*TB_FUNCIONARIO_TURNO_SEMANA*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_FUNC_TURNO_SEMANA FOR TB_FUNCIONARIO_TURNO_SEMANA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_FUNC_TURNO_SEMANA,1);
END
^

SET TERM ; ^



/*TB_DIA_NAO_UTIL*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_DIA_NAO_UTIL FOR TB_DIA_NAO_UTIL
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_DIA_NAO_UTIL,1);
END
^

SET TERM ; ^



/*TB_ORDEM_SERVICO*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_ORDEM_SERVICO FOR TB_ORDEM_SERVICO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_ORDEM_SERVICO,1);
END
^

SET TERM ; ^



/*TB_OS_SERVICO*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_OS_SERVICO FOR TB_OS_SERVICO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_OS_SERVICO,1);
END
^

SET TERM ; ^



/*TB_APONTAMENTOS_MATERIAIS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_APTO_MATERIAIS FOR TB_APONTAMENTOS_MATERIAIS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_APTO_MATERIAIS,1);
END
^

SET TERM ; ^



/*TB_APONTAMENTOS_RECURSOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_APONTAMENTOS_RECURSOS FOR TB_APONTAMENTOS_RECURSOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_APONTAMENTOS_RECURSOS,1);
END
^

SET TERM ; ^



/*TB_MARCOS_SERVICOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_MARCOS_SERVICOS FOR TB_MARCOS_SERVICOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_MARCOS_SERVICOS,1);
END
^

SET TERM ; ^



/*TB_PROJETO_FUNCIONARIOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PROJETO_FUNCIONARIOS FOR TB_PROJETO_FUNCIONARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PROJETO_FUNCIONARIOS,1);
END
^

SET TERM ; ^



/*TB_APTO_FUNCIONARIOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_APTO_FUNCIONARIOS FOR TB_APONTAMENTOS_FUNCIONARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_APTO_FUNCIONARIOS,1);
END
^

SET TERM ; ^



/*TB_OS_MATERIAIS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_OS_MATERIAIS FOR TB_OS_MATERIAIS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_OS_MATERIAIS,1);
END
^

SET TERM ; ^




/*TB_OS_RECURSOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_OS_RECURSOS FOR TB_OS_RECURSOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_OS_RECURSOS,1);
END
^

SET TERM ; ^



/*TB_OS_FUNCIONARIOS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_OS_FUNCIONARIOS FOR TB_OS_FUNCIONARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_OS_FUNCIONARIOS,1);
END
^

SET TERM ; ^



/*TB_PARAMETROS*/
SET TERM ^ ;

CREATE TRIGGER INSERT_TB_PARAMETROS FOR TB_PARAMETROS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.HAND IS NULL) THEN
    NEW.HAND = GEN_ID(GEN_TB_PARAMETROS,1);
END
^

SET TERM ; ^